/*
 * File: app/controller/main_controller.js
 * Date: Mon Nov 11 2013 17:52:21 GMT+0300 (E. Africa Standard Time)
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('PioneerApp.controller.main_controller', {
	extend: 'Ext.app.Controller',

	config: {
		refs: {
			registerOption: 'register_options',
			customer_button: '#customer',
			customer_form: '#customer_form',
			authorisation_screen: 'authorisation_screen',
			customer_save: '#save_customer',
			authorise_done: '#authorise_done'
		},

		control: {
			"authorise_done": {
				tap: 'onAuthoriseTap'
			},
			"customer_button": {
				tap: 'onCustomerTap'
			},
			"customer_save": {
				tap: 'onCustomerSaveTap'
			}
		}
	},

	onAuthoriseTap: function(button, e, eOpts) {
		//Get the Form Data
		var form = this.getAuthorisation_screen();
		var values= form.getValues();

		//Variables
		serverUrl = 'http://localhost/PioneerServer/index.php/api/flexipay_server/login/format/json';

		//Combine the Passwords
		userName=values.userName;
		password= values.mypasswordfield;
		imeiCode="2536-89567-56";

		//Check that a passcode was Entered
		if(password){ 
			Ext.Viewport.setMasked({
				xtype: 'loadmask',
				message: 'Logging In...'
			});
			console.log("Signing in");
			//B) Perform User Login Process with Mobile Number
			Ext.Ajax.request({
				url:serverUrl,
				method: 'POST',
				params: {
					userName:userName,
					password:password,
					imeiCode:imeiCode
				},

				success:function(result)
				{
					Ext.Viewport.setMasked(false); // hide the load screen

					//2. Scrutinize the Results
					//2a. Store the user data to the HTML-5 Session Variable(for later usage)
					var data = Ext.JSON.decode(result.responseText.trim());

					if(data.authorize){
						//2b. Store the USER-ID in Session Storage (HTML5)
						var sessionObject = {'userId':data.userId,'userName':data.userName,
							'firstName':data.firstName,'lastName':data.lastName};

						sessionStorage.setItem('sessionObject',JSON.stringify(data));

						var user_dashboard = Ext.create('PioneerApp.view.userDashboardPanel');     
						Ext.Viewport.setActiveItem(user_dashboard);                
					}else{
						//1. Alert Success
						Ext.Msg.alert("Failure", "Incorrect Credentials");	
					}
				}, 
				//Failed.. Call this function..
				failure: function(result){
					Ext.Viewport.setMasked(false); // hide the load screen
					var data = Ext.JSON.decode(result.responseText.trim());

					if(data.error){
						Ext.Msg.alert("Failure", data.error);
					}else{
						Ext.Msg.alert("Failure", "There is a problem communicating with the server");
					}
				},

				scope: this
			});   
		}else{
			Ext.Viewport.setMasked(false); // hide the load screen
			Ext.Msg.alert("Error","Enter Valid Username and Password Combination");    
		}

	},

	onCustomerTap: function(button, e, eOpts) {
		console.log("Customer Tapped");

		if (!this.customer_registration) {
		}

		this.customer_registration = Ext.create('FlexiPay.view.customer_registration_form');

		this.getIntroduction().push(this.customer_registration);
	},

	onCustomerSaveTap: function(button, e, eOpts) {
		var form = this.getCustomer_form();
		var values= form.getValues();
		values['account_id']=3;

		console.log(values);
		Ext.Viewport.setMasked({
			xtype: 'loadmask',
			message: 'Saving Records...'
		});



		//Getting the Instance of the model user which has a proxy
		var record = new FlexiPay.model.Users2(values);
		var errors = record.validate();


		//Ext.device.Notification.vibrate(); //
		if(errors.isValid()){   
			var me = this;
			record.save({
				success:function(result)
				{
					Ext.Viewport.setMasked(false); // hide the load screen

					//TODO: Should be coming back and continuing from here
					Ext.Msg.alert("Success", "You have successfully been registered as a customer. A verification code has been sent to your number, click OK to continue.");	

					//2a. Store the user data to the HTML-5 Session Variable(for later usage)
					//var data = Ext.JSON.decode(result.responseText.trim());

					//console.log(data.v_code);

					//Direct User to Verification Screen    
					var verification_screen = Ext.create('FlexiPay.view.Verification_screen');     
					Ext.Viewport.setActiveItem(verification_screen);
				},

				failure: function(model,operation){
					Ext.Viewport.setMasked(false); // hide the load screen
					var reader = model.getProxy().getReader();
					console.log(model,operation);
					//var message = reader.getMessage(reader.rawData);
					Ext.Msg.alert("Error: Server Said::","The Mobile Number exists. Enter a Unique Number");

					/*METHOD NOT WORKING 
					var proxy = model.getProxy();
					proxy.addListener({
					'exception': function(proxy, response, operation) {
					var obj = JSON.parse(response.responseText);
					console.log(obj);  
					}
					});
					*/
				}    
			});
		}else{
			Ext.Viewport.setMasked(false); // hide the load screen
			//Ext.Msg.alert("Error", "There were errors in your record, Check the Log for Information");  
			console.log("All Errors",errors.items);

			var data="";
			errors.each(function (item, index, length) {
				// Each item in the errors collection is an instance of the Ext.data.Error class.
				data = data + '|'+item.getField()+' - '+ item.getMessage() +'|' + '\n';
			});
			Ext.Msg.alert("Validation Failed", data);

		}




	},

	init: function(application) {
		//alert("Init Called");
	},

	launch: function() {
		//alert("Launch Called");
	}

});